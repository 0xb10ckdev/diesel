error[E0277]: Cannot select `posts::columns::id` from `users::table`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:19:31
   |
19 |     let source = users::table.select(sum(posts::id));
   |                               ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
   |
   = note: `posts::columns::id` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::id as SelectableExpression<Only<posts::table>>>
             <posts::columns::id as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::id as SelectableExpression<posts::table>>
             <posts::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <posts::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `diesel::expression::functions::aggregate_folding::sum::sum<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectDsl<diesel::expression::functions::aggregate_folding::sum::sum<diesel::sql_types::Integer, posts::columns::id>>` for `SelectStatement<FromClause<users::table>>`

error[E0271]: type mismatch resolving `<users::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Once`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:19:31
   |
19 |     let source = users::table.select(sum(posts::id));
   |                               ^^^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
   |
note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:13:9
   |
13 |         id -> Integer,
   |         ^^
   = note: 1 redundant requirement hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `diesel::expression::functions::aggregate_folding::sum::sum<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `diesel::expression::functions::aggregate_folding::sum::sum<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectDsl<diesel::expression::functions::aggregate_folding::sum::sum<diesel::sql_types::Integer, posts::columns::id>>` for `SelectStatement<FromClause<users::table>>`

error[E0277]: the trait bound `users::table: TableNotEqual<posts::table>` is not satisfied
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:19:31
   |
19 |     let source = users::table.select(sum(posts::id));
   |                               ^^^^^^ the trait `TableNotEqual<posts::table>` is not implemented for `users::table`
   |
   = help: the following other types implement trait `TableNotEqual<T>`:
             <Only<pg::metadata_lookup::pg_namespace::table> as TableNotEqual<pg::metadata_lookup::pg_type::table>>
             <Only<pg::metadata_lookup::pg_type::table> as TableNotEqual<pg::metadata_lookup::pg_namespace::table>>
             <pg::metadata_lookup::pg_namespace::table as TableNotEqual<Only<pg::metadata_lookup::pg_type::table>>>
             <pg::metadata_lookup::pg_namespace::table as TableNotEqual<pg::metadata_lookup::pg_type::table>>
             <pg::metadata_lookup::pg_type::table as TableNotEqual<Only<pg::metadata_lookup::pg_namespace::table>>>
             <pg::metadata_lookup::pg_type::table as TableNotEqual<pg::metadata_lookup::pg_namespace::table>>
   = note: required because of the requirements on the impl of `AppearsInFromClause<posts::table>` for `users::table`
note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:13:9
   |
13 |         id -> Integer,
   |         ^^
   = note: 1 redundant requirement hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `diesel::expression::functions::aggregate_folding::sum::sum<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `diesel::expression::functions::aggregate_folding::sum::sum<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectDsl<diesel::expression::functions::aggregate_folding::sum::sum<diesel::sql_types::Integer, posts::columns::id>>` for `SelectStatement<FromClause<users::table>>`

error[E0277]: Cannot select `posts::columns::id` from `users::table`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:20:31
   |
20 |     let source = users::table.select(avg(posts::id));
   |                               ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
   |
   = note: `posts::columns::id` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::id as SelectableExpression<Only<posts::table>>>
             <posts::columns::id as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::id as SelectableExpression<posts::table>>
             <posts::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <posts::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `diesel::expression::functions::aggregate_folding::avg::avg<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectDsl<diesel::expression::functions::aggregate_folding::avg::avg<diesel::sql_types::Integer, posts::columns::id>>` for `SelectStatement<FromClause<users::table>>`

error[E0271]: type mismatch resolving `<users::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Once`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:20:31
   |
20 |     let source = users::table.select(avg(posts::id));
   |                               ^^^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
   |
note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:13:9
   |
13 |         id -> Integer,
   |         ^^
   = note: 1 redundant requirement hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `diesel::expression::functions::aggregate_folding::avg::avg<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `diesel::expression::functions::aggregate_folding::avg::avg<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectDsl<diesel::expression::functions::aggregate_folding::avg::avg<diesel::sql_types::Integer, posts::columns::id>>` for `SelectStatement<FromClause<users::table>>`

error[E0277]: the trait bound `users::table: TableNotEqual<posts::table>` is not satisfied
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:20:31
   |
20 |     let source = users::table.select(avg(posts::id));
   |                               ^^^^^^ the trait `TableNotEqual<posts::table>` is not implemented for `users::table`
   |
   = help: the following other types implement trait `TableNotEqual<T>`:
             <Only<pg::metadata_lookup::pg_namespace::table> as TableNotEqual<pg::metadata_lookup::pg_type::table>>
             <Only<pg::metadata_lookup::pg_type::table> as TableNotEqual<pg::metadata_lookup::pg_namespace::table>>
             <pg::metadata_lookup::pg_namespace::table as TableNotEqual<Only<pg::metadata_lookup::pg_type::table>>>
             <pg::metadata_lookup::pg_namespace::table as TableNotEqual<pg::metadata_lookup::pg_type::table>>
             <pg::metadata_lookup::pg_type::table as TableNotEqual<Only<pg::metadata_lookup::pg_namespace::table>>>
             <pg::metadata_lookup::pg_type::table as TableNotEqual<pg::metadata_lookup::pg_namespace::table>>
   = note: required because of the requirements on the impl of `AppearsInFromClause<posts::table>` for `users::table`
note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:13:9
   |
13 |         id -> Integer,
   |         ^^
   = note: 1 redundant requirement hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `diesel::expression::functions::aggregate_folding::avg::avg<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `diesel::expression::functions::aggregate_folding::avg::avg<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectDsl<diesel::expression::functions::aggregate_folding::avg::avg<diesel::sql_types::Integer, posts::columns::id>>` for `SelectStatement<FromClause<users::table>>`

error[E0277]: Cannot select `posts::columns::id` from `users::table`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:21:31
   |
21 |     let source = users::table.select(max(posts::id));
   |                               ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
   |
   = note: `posts::columns::id` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::id as SelectableExpression<Only<posts::table>>>
             <posts::columns::id as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::id as SelectableExpression<posts::table>>
             <posts::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <posts::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `diesel::expression::functions::aggregate_ordering::max::max<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectDsl<diesel::expression::functions::aggregate_ordering::max::max<diesel::sql_types::Integer, posts::columns::id>>` for `SelectStatement<FromClause<users::table>>`

error[E0271]: type mismatch resolving `<users::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Once`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:21:31
   |
21 |     let source = users::table.select(max(posts::id));
   |                               ^^^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
   |
note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:13:9
   |
13 |         id -> Integer,
   |         ^^
   = note: 1 redundant requirement hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `diesel::expression::functions::aggregate_ordering::max::max<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `diesel::expression::functions::aggregate_ordering::max::max<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectDsl<diesel::expression::functions::aggregate_ordering::max::max<diesel::sql_types::Integer, posts::columns::id>>` for `SelectStatement<FromClause<users::table>>`

error[E0277]: the trait bound `users::table: TableNotEqual<posts::table>` is not satisfied
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:21:31
   |
21 |     let source = users::table.select(max(posts::id));
   |                               ^^^^^^ the trait `TableNotEqual<posts::table>` is not implemented for `users::table`
   |
   = help: the following other types implement trait `TableNotEqual<T>`:
             <Only<pg::metadata_lookup::pg_namespace::table> as TableNotEqual<pg::metadata_lookup::pg_type::table>>
             <Only<pg::metadata_lookup::pg_type::table> as TableNotEqual<pg::metadata_lookup::pg_namespace::table>>
             <pg::metadata_lookup::pg_namespace::table as TableNotEqual<Only<pg::metadata_lookup::pg_type::table>>>
             <pg::metadata_lookup::pg_namespace::table as TableNotEqual<pg::metadata_lookup::pg_type::table>>
             <pg::metadata_lookup::pg_type::table as TableNotEqual<Only<pg::metadata_lookup::pg_namespace::table>>>
             <pg::metadata_lookup::pg_type::table as TableNotEqual<pg::metadata_lookup::pg_namespace::table>>
   = note: required because of the requirements on the impl of `AppearsInFromClause<posts::table>` for `users::table`
note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:13:9
   |
13 |         id -> Integer,
   |         ^^
   = note: 1 redundant requirement hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `diesel::expression::functions::aggregate_ordering::max::max<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `diesel::expression::functions::aggregate_ordering::max::max<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectDsl<diesel::expression::functions::aggregate_ordering::max::max<diesel::sql_types::Integer, posts::columns::id>>` for `SelectStatement<FromClause<users::table>>`

error[E0277]: Cannot select `posts::columns::id` from `users::table`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:22:31
   |
22 |     let source = users::table.select(min(posts::id));
   |                               ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
   |
   = note: `posts::columns::id` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::id as SelectableExpression<Only<posts::table>>>
             <posts::columns::id as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::id as SelectableExpression<posts::table>>
             <posts::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <posts::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `diesel::expression::functions::aggregate_ordering::min::min<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectDsl<diesel::expression::functions::aggregate_ordering::min::min<diesel::sql_types::Integer, posts::columns::id>>` for `SelectStatement<FromClause<users::table>>`

error[E0271]: type mismatch resolving `<users::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Once`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:22:31
   |
22 |     let source = users::table.select(min(posts::id));
   |                               ^^^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
   |
note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:13:9
   |
13 |         id -> Integer,
   |         ^^
   = note: 1 redundant requirement hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `diesel::expression::functions::aggregate_ordering::min::min<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `diesel::expression::functions::aggregate_ordering::min::min<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectDsl<diesel::expression::functions::aggregate_ordering::min::min<diesel::sql_types::Integer, posts::columns::id>>` for `SelectStatement<FromClause<users::table>>`

error[E0277]: the trait bound `users::table: TableNotEqual<posts::table>` is not satisfied
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:22:31
   |
22 |     let source = users::table.select(min(posts::id));
   |                               ^^^^^^ the trait `TableNotEqual<posts::table>` is not implemented for `users::table`
   |
   = help: the following other types implement trait `TableNotEqual<T>`:
             <Only<pg::metadata_lookup::pg_namespace::table> as TableNotEqual<pg::metadata_lookup::pg_type::table>>
             <Only<pg::metadata_lookup::pg_type::table> as TableNotEqual<pg::metadata_lookup::pg_namespace::table>>
             <pg::metadata_lookup::pg_namespace::table as TableNotEqual<Only<pg::metadata_lookup::pg_type::table>>>
             <pg::metadata_lookup::pg_namespace::table as TableNotEqual<pg::metadata_lookup::pg_type::table>>
             <pg::metadata_lookup::pg_type::table as TableNotEqual<Only<pg::metadata_lookup::pg_namespace::table>>>
             <pg::metadata_lookup::pg_type::table as TableNotEqual<pg::metadata_lookup::pg_namespace::table>>
   = note: required because of the requirements on the impl of `AppearsInFromClause<posts::table>` for `users::table`
note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
  --> tests/fail/aggregate_expression_requires_column_from_same_table.rs:13:9
   |
13 |         id -> Integer,
   |         ^^
   = note: 1 redundant requirement hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `diesel::expression::functions::aggregate_ordering::min::min<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `diesel::expression::functions::aggregate_ordering::min::min<diesel::sql_types::Integer, posts::columns::id>`
   = note: required because of the requirements on the impl of `SelectDsl<diesel::expression::functions::aggregate_ordering::min::min<diesel::sql_types::Integer, posts::columns::id>>` for `SelectStatement<FromClause<users::table>>`
