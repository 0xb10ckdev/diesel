warning: use of deprecated function `diesel::dsl::any`: Use `ExpressionMethods::eq_any` instead
  --> tests/fail/any_is_only_selectable_if_inner_expr_is_selectable.rs:30:34
   |
30 |     let _ = stuff.filter(name.eq(any(more_stuff::names)))
   |                                  ^^^
   |
   = note: `#[warn(deprecated)]` on by default

error[E0271]: type mismatch resolving `<stuff::table as AppearsInFromClause<more_stuff::table>>::Count == diesel::query_source::Once`
    --> tests/fail/any_is_only_selectable_if_inner_expr_is_selectable.rs:31:10
     |
31   |         .load(&mut conn);
     |          ^^^^ expected struct `diesel::query_source::Once`, found struct `diesel::query_source::Never`
     |
note: required because of the requirements on the impl of `AppearsOnTable<stuff::table>` for `more_stuff::columns::names`
    --> tests/fail/any_is_only_selectable_if_inner_expr_is_selectable.rs:15:9
     |
15   |         names -> Array<VarChar>,
     |         ^^^^^
     = note: 3 redundant requirements hidden
     = note: required because of the requirements on the impl of `AppearsOnTable<stuff::table>` for `diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<stuff::columns::name, diesel::pg::expression::array_comparison::Any<more_stuff::columns::names>>>`
     = note: required because of the requirements on the impl of `diesel::query_builder::where_clause::ValidWhereClause<FromClause<stuff::table>>` for `diesel::query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<stuff::columns::name, diesel::pg::expression::array_comparison::Any<more_stuff::columns::names>>>>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<stuff::table>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<stuff::table>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<stuff::columns::name, diesel::pg::expression::array_comparison::Any<more_stuff::columns::names>>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, _>` for `SelectStatement<FromClause<stuff::table>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<stuff::table>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<stuff::columns::name, diesel::pg::expression::array_comparison::Any<more_stuff::columns::names>>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> $DIESEL/src/query_dsl/mod.rs
     |
     |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0277]: the trait bound `stuff::table: TableNotEqual<more_stuff::table>` is not satisfied
    --> tests/fail/any_is_only_selectable_if_inner_expr_is_selectable.rs:31:10
     |
31   |         .load(&mut conn);
     |          ^^^^ the trait `TableNotEqual<more_stuff::table>` is not implemented for `stuff::table`
     |
     = help: the following other types implement trait `TableNotEqual<T>`:
               <Only<pg::metadata_lookup::pg_namespace::table> as TableNotEqual<pg::metadata_lookup::pg_type::table>>
               <Only<pg::metadata_lookup::pg_type::table> as TableNotEqual<pg::metadata_lookup::pg_namespace::table>>
               <pg::metadata_lookup::pg_namespace::table as TableNotEqual<Only<pg::metadata_lookup::pg_type::table>>>
               <pg::metadata_lookup::pg_namespace::table as TableNotEqual<pg::metadata_lookup::pg_type::table>>
               <pg::metadata_lookup::pg_type::table as TableNotEqual<Only<pg::metadata_lookup::pg_namespace::table>>>
               <pg::metadata_lookup::pg_type::table as TableNotEqual<pg::metadata_lookup::pg_namespace::table>>
     = note: required because of the requirements on the impl of `AppearsInFromClause<more_stuff::table>` for `stuff::table`
note: required because of the requirements on the impl of `AppearsOnTable<stuff::table>` for `more_stuff::columns::names`
    --> tests/fail/any_is_only_selectable_if_inner_expr_is_selectable.rs:15:9
     |
15   |         names -> Array<VarChar>,
     |         ^^^^^
     = note: 3 redundant requirements hidden
     = note: required because of the requirements on the impl of `AppearsOnTable<stuff::table>` for `diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<stuff::columns::name, diesel::pg::expression::array_comparison::Any<more_stuff::columns::names>>>`
     = note: required because of the requirements on the impl of `diesel::query_builder::where_clause::ValidWhereClause<FromClause<stuff::table>>` for `diesel::query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<stuff::columns::name, diesel::pg::expression::array_comparison::Any<more_stuff::columns::names>>>>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<stuff::table>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<stuff::table>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<stuff::columns::name, diesel::pg::expression::array_comparison::Any<more_stuff::columns::names>>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, _>` for `SelectStatement<FromClause<stuff::table>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<stuff::table>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<stuff::columns::name, diesel::pg::expression::array_comparison::Any<more_stuff::columns::names>>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> $DIESEL/src/query_dsl/mod.rs
     |
     |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`
