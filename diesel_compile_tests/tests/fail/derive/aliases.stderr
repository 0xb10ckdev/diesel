error[E0271]: type mismatch resolving `<posts::columns::id as Column>::Table == users::table`
  --> tests/fail/derive/aliases.rs:36:16
   |
36 |     user_alias.field(posts::id);
   |                ^^^^^ expected struct `users::table`, found struct `posts::table`
   |
note: required by a bound in `Alias::<S>::field`
  --> $DIESEL/src/query_source/aliasing/alias.rs
   |
   |         F: Column<Table = S::Target>,
   |                   ^^^^^^^^^^^^^^^^^ required by this bound in `Alias::<S>::field`

error[E0271]: type mismatch resolving `<diesel::query_source::Once as Plus<diesel::query_source::Once>>::Output == diesel::query_source::Once`
  --> tests/fail/derive/aliases.rs:42:10
   |
42 |         .inner_join(post_alias)
   |          ^^^^^^^^^^ expected struct `MoreThanOnce`, found struct `diesel::query_source::Once`
   |
   = note: required because of the requirements on the impl of `AppearsOnTable<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner>>` for `AliasedField<posts2, posts::columns::id>`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner>>` for `((users::columns::id, users::columns::name), (AliasedField<posts2, posts::columns::id>, AliasedField<posts2, posts::columns::author>, AliasedField<posts2, posts::columns::title>), (AliasedField<posts2, posts::columns::id>, AliasedField<posts2, posts::columns::author>, AliasedField<posts2, posts::columns::title>))`
   = note: required because of the requirements on the impl of `QuerySource` for `query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner>`
   = note: 1 redundant requirement hidden
   = note: required because of the requirements on the impl of `QuerySource` for `JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>`
   = note: required because of the requirements on the impl of `InternalJoinDsl<Alias<posts2>, Inner, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>` for `SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>>>`

error[E0271]: type mismatch resolving `<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner> as AppearsInFromClause<Alias<posts2>>>::Count == diesel::query_source::Once`
  --> tests/fail/derive/aliases.rs:42:10
   |
42 |         .inner_join(post_alias)
   |          ^^^^^^^^^^ expected struct `MoreThanOnce`, found struct `diesel::query_source::Once`
   |
   = note: required because of the requirements on the impl of `AppearsOnTable<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner>>` for `AliasedField<posts2, posts::columns::id>`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner>>` for `((users::columns::id, users::columns::name), (AliasedField<posts2, posts::columns::id>, AliasedField<posts2, posts::columns::author>, AliasedField<posts2, posts::columns::title>), (AliasedField<posts2, posts::columns::id>, AliasedField<posts2, posts::columns::author>, AliasedField<posts2, posts::columns::title>))`
   = note: required because of the requirements on the impl of `QuerySource` for `query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner>`
   = note: 1 redundant requirement hidden
   = note: required because of the requirements on the impl of `QuerySource` for `JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>`
   = note: required because of the requirements on the impl of `InternalJoinDsl<Alias<posts2>, Inner, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>` for `SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>>>`

error[E0599]: the method `select` exists for struct `SelectStatement<FromClause<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>>>`, but its trait bounds were not satisfied
  --> tests/fail/derive/aliases.rs:43:10
   |
43 |         .select(users::id)
   |          ^^^^^^ private field, not a method
   |
   = note: the following trait bounds were not satisfied:
           `&SelectStatement<FromClause<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>>>: Table`
           which is required by `&SelectStatement<FromClause<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>>>: diesel::QueryDsl`
           `&mut SelectStatement<FromClause<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>>>: Table`
           which is required by `&mut SelectStatement<FromClause<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>, Alias<posts2>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<AliasedField<posts2, posts::columns::author>>, NullableExpression<users::columns::id>>>>>>: diesel::QueryDsl`

error[E0277]: Cannot select `users::columns::id` from `Alias<users2>`
  --> tests/fail/derive/aliases.rs:48:16
   |
48 |     user_alias.select(users::id).load::<i32>(conn).unwrap();
   |                ^^^^^^ the trait `SelectableExpression<Alias<users2>>` is not implemented for `users::columns::id`
   |
   = note: `users::columns::id` is no valid selection for `Alias<users2>`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <users::columns::id as SelectableExpression<JoinOn<Join, On>>>
             <users::columns::id as SelectableExpression<Only<users::table>>>
             <users::columns::id as SelectableExpression<SelectStatement<FromClause<From>>>>
             <users::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <users::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
             <users::columns::id as SelectableExpression<users::table>>
   = note: required because of the requirements on the impl of `SelectDsl<users::columns::id>` for `SelectStatement<FromClause<Alias<users2>>>`

error[E0277]: Cannot select `users::columns::id` from `Alias<users2>`
    --> tests/fail/derive/aliases.rs:48:34
     |
48   |     user_alias.select(users::id).load::<i32>(conn).unwrap();
     |                                  ^^^^ the trait `SelectableExpression<Alias<users2>>` is not implemented for `users::columns::id`
     |
     = note: `users::columns::id` is no valid selection for `Alias<users2>`
     = help: the following other types implement trait `SelectableExpression<QS>`:
               <users::columns::id as SelectableExpression<JoinOn<Join, On>>>
               <users::columns::id as SelectableExpression<Only<users::table>>>
               <users::columns::id as SelectableExpression<SelectStatement<FromClause<From>>>>
               <users::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
               <users::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
               <users::columns::id as SelectableExpression<users::table>>
     = note: required because of the requirements on the impl of `diesel::query_builder::select_clause::SelectClauseExpression<FromClause<Alias<users2>>>` for `diesel::query_builder::select_clause::SelectClause<users::columns::id>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<Alias<users2>>, diesel::query_builder::select_clause::SelectClause<users::columns::id>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, i32>` for `SelectStatement<FromClause<Alias<users2>>, diesel::query_builder::select_clause::SelectClause<users::columns::id>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> $DIESEL/src/query_dsl/mod.rs
     |
     |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0277]: the trait bound `Alias<users2>: AppearsInFromClause<pets::table>` is not satisfied
  --> tests/fail/derive/aliases.rs:54:10
   |
54 |         .inner_join(user_alias)
   |          ^^^^^^^^^^ the trait `AppearsInFromClause<pets::table>` is not implemented for `Alias<users2>`
   |
   = help: the trait `AppearsInFromClause<QS>` is implemented for `Alias<S>`
   = note: required because of the requirements on the impl of `AppearsInFromClause<pets::table>` for `query_source::joins::Join<pets::table, Alias<users2>, Inner>`
note: required because of the requirements on the impl of `AppearsOnTable<query_source::joins::Join<pets::table, Alias<users2>, Inner>>` for `pets::columns::id`
  --> tests/fail/derive/aliases.rs:21:1
   |
21 | / table! {
22 | |     pets {
23 | |         id -> Integer,
24 | |     }
25 | | }
   | |_^
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<query_source::joins::Join<pets::table, Alias<users2>, Inner>>` for `((pets::columns::id,), (AliasedField<users2, users::columns::id>, AliasedField<users2, users::columns::name>))`
   = note: required because of the requirements on the impl of `QuerySource` for `query_source::joins::Join<pets::table, Alias<users2>, Inner>`
   = note: 1 redundant requirement hidden
   = note: required because of the requirements on the impl of `QuerySource` for `JoinOn<query_source::joins::Join<pets::table, Alias<users2>, Inner>, _>`
   = note: required because of the requirements on the impl of `InternalJoinDsl<Alias<users2>, Inner, _>` for `SelectStatement<FromClause<pets::table>>`
   = note: this error originates in the macro `$crate::__diesel_column` which comes from the expansion of the macro `table` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `users::table: JoinTo<pets::table>` is not satisfied
  --> tests/fail/derive/aliases.rs:54:10
   |
54 |         .inner_join(user_alias)
   |          ^^^^^^^^^^ the trait `JoinTo<pets::table>` is not implemented for `users::table`
   |
   = help: the following other types implement trait `JoinTo<T>`:
             <users::table as JoinTo<Alias<S>>>
             <users::table as JoinTo<BoxedSelectStatement<'a, FromClause<QS>, ST, DB>>>
             <users::table as JoinTo<JoinOn<Join, On>>>
             <users::table as JoinTo<Only<S>>>
             <users::table as JoinTo<SelectStatement<FromClause<F>, S, D, W, O, L, Of, G>>>
             <users::table as JoinTo<posts::table>>
             <users::table as JoinTo<query_source::joins::Join<Left, Right, Kind>>>
   = note: required because of the requirements on the impl of `JoinTo<pets::table>` for `Alias<users2>`
   = note: required because of the requirements on the impl of `JoinWithImplicitOnClause<Alias<users2>, Inner>` for `pets::table`

error[E0599]: the method `select` exists for struct `SelectStatement<FromClause<JoinOn<query_source::joins::Join<pets::table, Alias<users2>, Inner>, _>>>`, but its trait bounds were not satisfied
  --> tests/fail/derive/aliases.rs:55:10
   |
55 |         .select(pets::id)
   |          ^^^^^^ private field, not a method
   |
   = note: the following trait bounds were not satisfied:
           `&SelectStatement<FromClause<JoinOn<query_source::joins::Join<pets::table, Alias<users2>, Inner>, _>>>: Table`
           which is required by `&SelectStatement<FromClause<JoinOn<query_source::joins::Join<pets::table, Alias<users2>, Inner>, _>>>: diesel::QueryDsl`
           `&mut SelectStatement<FromClause<JoinOn<query_source::joins::Join<pets::table, Alias<users2>, Inner>, _>>>: Table`
           which is required by `&mut SelectStatement<FromClause<JoinOn<query_source::joins::Join<pets::table, Alias<users2>, Inner>, _>>>: diesel::QueryDsl`
